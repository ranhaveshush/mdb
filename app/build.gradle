apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply from: "${project.rootDir}/config/gradle/moduleTasks.gradle"

if (file('local.gradle').exists()) {
    apply from: 'local.gradle'
} else {
    throw new GradleException(
            "${project.rootDir}/local.gradle file doesn't exists."
                    + "\nCreate a local.gradle file from the local.gradle.example file."
                    + "\nImportant: paste your TMDb api key there.")
}

android {
    compileSdkVersion versions.sdk.compile
    defaultConfig {
        applicationId "com.ranhaveshush.mdb"
        minSdkVersion versions.sdk.min
        targetSdkVersion versions.sdk.target
        versionCode versions.version_code
        versionName versions.version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro',
                    "$project.projectDir/proguard/okio.pro",
                    "$project.projectDir/proguard/okhttp3.pro",
                    "$project.projectDir/proguard/retrofit.pro"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin_stdlib_jdk8"
    implementation "androidx.core:core-ktx:$versions.core_ktx"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlinx_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlinx_coroutines"
    // Android support
    implementation "androidx.appcompat:appcompat:$versions.appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$versions.retrofit_call_adapter"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.logging_interceptor"
    // Test
    testImplementation "junit:junit:$versions.junit"
    androidTestImplementation "androidx.test:runner:$versions.runner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso_core"
}
